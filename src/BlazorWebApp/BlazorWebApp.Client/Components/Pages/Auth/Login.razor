@page "/login"
@using Domain.DTOs
@using Application.Interfaces
@inject IAuthApplicationService AuthService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<PageTitle>Login</PageTitle>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h3 class="text-center">Staff Login</h3>
                </div>
                <div class="card-body">
                    <EditForm Model="loginDto" OnValidSubmit="HandleLogin" FormName="LoginForm">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        @if (!string.IsNullOrEmpty(errorMessage))
                        {
                            <div class="alert alert-danger">@errorMessage</div>
                        }

                        <div class="mb-3">
                            <label for="username" class="form-label">Username</label>
                            <InputText id="username" class="form-control" @bind-Value="loginDto.Username" />
                            <ValidationMessage For="@(() => loginDto.Username)" />
                        </div>

                        <div class="mb-3">
                            <label for="password" class="form-label">Password</label>
                            <InputText id="password" type="password" class="form-control" @bind-Value="loginDto.Password" />
                            <ValidationMessage For="@(() => loginDto.Password)" />
                        </div>

                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary" disabled="@isLoading">
                                @if (isLoading)
                                {
                                    <span class="spinner-border spinner-border-sm me-2"></span>
                                }
                                Login
                            </button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginDto loginDto = new();
    private string errorMessage = string.Empty;
    private bool isLoading = false;

    private async Task HandleLogin()
    {
        isLoading = true;
        errorMessage = string.Empty;

        try
        {
            var token = await AuthService.LoginAsync(loginDto);
            if (!string.IsNullOrEmpty(token))
            {
                await JSRuntime.InvokeVoidAsync("localStorage.setItem", "authToken", token);
                Navigation.NavigateTo("/staff");
            }
            else
            {
                errorMessage = "Invalid username or password.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = "An error occurred during login.";
        }
        finally
        {
            isLoading = false;
        }
    }
}